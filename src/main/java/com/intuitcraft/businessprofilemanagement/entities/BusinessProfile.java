package com.intuitcraft.businessprofilemanagement.entities;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;
import com.amazonaws.util.CollectionUtils;
import com.intuitcraft.businessprofilemanagement.enums.TaxIdentifier;
import com.intuitcraft.businessprofilemanagement.models.Address;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.SuperBuilder;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

@Getter
@Setter
@ToString
@SuperBuilder
@DynamoDBTable(tableName = "business_profile")
@AllArgsConstructor
@NoArgsConstructor
public class BusinessProfile extends BaseEntity {
    @DynamoDBHashKey(attributeName = "profile_id")
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBAttribute
    private String legalName;

    @DynamoDBAttribute
    private String companyName;

    @DynamoDBAttribute
    private Address legalAddress;

    @DynamoDBAttribute
    private Address businessAddress;

    @DynamoDBAttribute
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.SS)
    private Set<TaxIdentifier> taxIdentifiers;

    @DynamoDBAttribute
    private String email;

    @DynamoDBAttribute
    private String website;

    @DynamoDBAttribute
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.SS)
    private Set<String> subscribedProducts;

    public void subscribe(String businessId) {
        if (Objects.isNull(subscribedProducts)) {
            subscribedProducts = new HashSet<>();
        }
        subscribedProducts.add(businessId);
    }

    public Boolean unsubscribe(String businessId) {
        if (!CollectionUtils.isNullOrEmpty(subscribedProducts)) {
            return subscribedProducts.remove(businessId);
        }
        return false;
    }


}
